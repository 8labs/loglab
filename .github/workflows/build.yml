name: Build/release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, ubuntu-24.04-arm64, windows-latest]
        BUILD_TARGET: [release] # refers to a cargo profile

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          cache-directories: cli/target
          cache-targets: cli

      - name: Build and test
        working-directory: cli
        run: |
          cargo build --profile ${{ matrix.BUILD_TARGET }}
          cargo test --profile ${{ matrix.BUILD_TARGET }}
          cargo clippy --profile ${{ matrix.BUILD_TARGET }}

      - name: Prepare binary
        working-directory: cli
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
              cp target/release/loglab.exe loglab-win.exe
            elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
              cp target/release/loglab loglab-mac
            elif [[ "${{ matrix.os }}" == "ubuntu-24.04-arm64" ]]; then
              cp target/release/loglab loglab-ubuntu-arm
          else
            cp target/release/loglab loglab-ubuntu
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          generate_release_notes: true
          files: |
            cli/loglab-${{ matrix.os == 'windows-latest' && 'win' || matrix.os == 'macos-latest' && 'mac' || 'ubuntu' }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
